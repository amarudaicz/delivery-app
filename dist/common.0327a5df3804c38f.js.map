{"version":3,"file":"common.0327a5df3804c38f.js","mappings":"+JAEO,MAAMA,KAAYC,MAAQ,aAAc,IAC7CC,MAAW,SAAU,IACnBC,MAAM,CAAEC,UAAW,sBAAoB,EACvCC,MAAQ,cAAYF,MAAM,CAAEC,UAAW,sBACxC,EACDF,MAAW,SAAU,IACnBC,MAAM,CAAEC,UAAW,mBAAiB,EACpCC,MAAQ,cAAYF,MAAM,CAAEC,UAAW,0BAI9BE,KAAWL,MAAQ,aAAc,IAC5CC,MAAW,SAAU,IACnBC,MAAM,CAAEC,UAAW,uBAAqB,EACxCC,MAAQ,kBAAgBF,MAAM,CAAEC,UAAW,sBAC5C,EACDF,MAAW,SAAU,IACnBC,MAAM,CAAEC,UAAW,mBAAiB,EACpCC,MAAQ,kBAAgBF,MAAM,CAAEC,UAAW,4BAKlCG,EAAcN,MAAQ,cAAe,IAChDO,MAAM,UAAQL,MAAM,CACdM,QAAS,WACT,EACFP,MAAW,SAAU,IACnBC,MAAM,CACJC,UAAW,uBACZ,EACDC,MAAQ,oBACT,EACDH,MAAW,SAAU,IACnBG,MAAQ,kBAAgBF,MAAM,CAC5BC,UAAW,mFCZf,MAAOM,EAJbC,cAMIC,YAAoB,CAChBC,QAAQ,EACRC,WAAY,WACZC,SAAU,SACVC,YAAa,OACbC,MAAO,oBACPC,MAAO,IAGXN,WAAqB,CACjBO,2BAA2B,EAC3BC,mBAAmB,EACnBC,uBAAuB,EACvBC,sBAAsB,EACtBC,wBAAwB,EACxBC,iBAAiB,GAGbZ,kBAAe,IAAIa,IAEnBb,iBAAc,IAAIa,IAE1Bb,mBAAgBA,KAAKc,aAAaC,eAElCf,kBAAeA,KAAKgB,YAAYD,eAEhCE,eACQjB,KAAKkB,cACLlB,KAAKJ,MAAMY,mBAAqBR,KAAKJ,MAAMY,kBACvCR,KAAKJ,MAAMY,mBACXR,KAAKgB,YAAYG,KAAK,OAI1BnB,KAAKoB,YACLpB,KAAKJ,MAAMW,2BAA6BP,KAAKJ,MAAMW,2BAGnDP,KAAKJ,MAAMe,wBAA0BX,KAAKJ,MAAMe,uBAC5CX,KAAKJ,MAAMe,wBACXX,KAAKgB,YAAYG,KAAK,MAGlC,CAEAE,qBACIrB,KAAKJ,MAAMa,uBAAyBT,KAAKJ,MAAMa,sBAC3CT,KAAKJ,MAAMa,uBACXT,KAAKgB,YAAYG,KAAK,KAE9B,CAEAG,oBACItB,KAAKJ,MAAMc,sBAAuB,CACtC,CAEAQ,YACI,MAAgC,YAAzBlB,KAAKuB,OAAOpB,QACvB,CAEAiB,YACI,OAAOI,OAAOC,WAAa,GAC/B,CAEAC,WACI,OAAQ1B,KAAKoB,WACjB,CAEAO,iBACI3B,KAAKc,aAAaK,KAAKnB,KAAKuB,OAChC,EAxESzB,EAAa,oCAAbA,EAAa,EAAbA,EAAa,wBAAbA,EAAa8B,QAAb9B,EAAa,qBAHV,4ECbV,MAAO+B,EAMX9B,YACU+B,oBAHV9B,wBAAqB,IAAI+B,IAA2B,IAMlD/B,KAAK8B,UAAUE,gBAAgBC,UAAUC,IACvCC,QAAQC,IAAIF,GACRA,EAAKG,QACPrC,KAAKsC,YAAYJ,EAAM,GAAGK,GAAE,EAMlC,CAIAD,YAAYC,GACVvC,KAAKwC,YAAcD,EACnBvC,KAAK8B,UAAUW,cAAcR,UAAUS,IACrC,MAAMR,EAAOQ,EAASC,OAAOC,GAAIA,EAAEJ,cAAgBD,GACnDvC,KAAK6C,mBAAmB1B,KAAKe,EAAI,EAGrC,EA9BWL,EAAsB,oCAAtBA,GAAsBiB,aAAtBjB,EAAsB,wBAAtBA,EAAsBD,QAAtBC,EAAsB,qBAFrB","names":["enterRight","trigger","transition","style","transform","animate","enterLeft","enterDownUp","state","display","LayoutService","constructor","this","ripple","inputStyle","menuMode","colorScheme","theme","scale","staticMenuDesktopInactive","overlayMenuActive","profileSidebarVisible","configSidebarVisible","staticMenuMobileActive","menuHoverActive","Subject","configUpdate","asObservable","overlayOpen","onMenuToggle","isOverlay","next","isDesktop","showProfileSidebar","showConfigSidebar","config","window","innerWidth","isMobile","onConfigUpdate","factory","PreviewCategoryService","localData","BehaviorSubject","getCategories","subscribe","data","console","log","length","setCategory","id","category_id","getProducts","products","filter","p","productsByCategory","_angular_core__WEBPACK_IMPORTED_MODULE_2__"],"sourceRoot":"webpack:///","sources":["./src/app/animations/main-animations.ts","./src/app/layout/service/app.layout.service.ts","./src/app/services/preview-category/preview-category.service.ts"],"sourcesContent":["import { trigger, transition, style, query, animateChild, group, animate, state } from \"@angular/animations\";\r\n\r\nexport const enterRight= trigger('enterRight', [\r\n  transition(':enter', [\r\n    style({ transform: 'translateX(100%)' }),\r\n    animate('.2s ease', style({ transform: 'translateX(0)' }))\r\n  ]),\r\n  transition(':leave', [\r\n    style({ transform: 'translateX(0)' }),\r\n    animate('.2s ease', style({ transform: 'translateX(100%)'}))\r\n  ])\r\n]);\r\n\r\nexport const enterLeft= trigger('enterRight', [\r\n  transition(':enter', [\r\n    style({ transform: 'translateX(-150%)' }),\r\n    animate('.3s ease-out', style({ transform: 'translateX(0)' }))\r\n  ]),\r\n  transition(':leave', [\r\n    style({ transform: 'translateX(0)' }),\r\n    animate('.3s ease-out', style({ transform: 'translateX(-150%)'}))\r\n  ])\r\n]);\r\n\r\n\r\nexport const enterDownUp = trigger('slideUpDown', [\r\n  state('void', style({\r\n        display: 'none'\r\n      })),\r\n      transition(':enter', [\r\n        style({\r\n          transform: 'translateY(-100%)'\r\n        }),\r\n        animate('0.5s ease-out')\r\n      ]),\r\n      transition(':leave', [\r\n        animate('0.5s ease-in', style({\r\n          transform: 'translateY(-100%)'\r\n        }))\r\n      ])\r\n])\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nexport interface AppConfig {\r\n    inputStyle: string;\r\n    colorScheme: string;\r\n    theme: string;\r\n    ripple: boolean;\r\n    menuMode: string;\r\n    scale: number;\r\n}\r\n\r\ninterface LayoutState {\r\n    staticMenuDesktopInactive: boolean;\r\n    overlayMenuActive: boolean;\r\n    profileSidebarVisible: boolean;\r\n    configSidebarVisible: boolean;\r\n    staticMenuMobileActive: boolean;\r\n    menuHoverActive: boolean;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n\r\nexport class LayoutService {\r\n\r\n    config: AppConfig = {\r\n        ripple: true,\r\n        inputStyle: 'outlined',\r\n        menuMode: 'static',\r\n        colorScheme: 'dark',\r\n        theme: 'lara-light-indigo',\r\n        scale: 12,\r\n    };\r\n\r\n    state: LayoutState = {\r\n        staticMenuDesktopInactive: false,\r\n        overlayMenuActive: false,\r\n        profileSidebarVisible: false,\r\n        configSidebarVisible: false,\r\n        staticMenuMobileActive: false,\r\n        menuHoverActive: true\r\n    };\r\n\r\n    private configUpdate = new Subject<AppConfig>();\r\n\r\n    private overlayOpen = new Subject<any>();\r\n\r\n    configUpdate$ = this.configUpdate.asObservable();\r\n\r\n    overlayOpen$ = this.overlayOpen.asObservable();\r\n\r\n    onMenuToggle() {\r\n        if (this.isOverlay()) {\r\n            this.state.overlayMenuActive = !this.state.overlayMenuActive;\r\n            if (this.state.overlayMenuActive) {\r\n                this.overlayOpen.next(null);\r\n            }\r\n        }\r\n\r\n        if (this.isDesktop()) {\r\n            this.state.staticMenuDesktopInactive = !this.state.staticMenuDesktopInactive;\r\n        }\r\n        else {\r\n            this.state.staticMenuMobileActive = !this.state.staticMenuMobileActive;\r\n            if (this.state.staticMenuMobileActive) {\r\n                this.overlayOpen.next(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    showProfileSidebar() {\r\n        this.state.profileSidebarVisible = !this.state.profileSidebarVisible;\r\n        if (this.state.profileSidebarVisible) {\r\n            this.overlayOpen.next(null);\r\n        }\r\n    }\r\n\r\n    showConfigSidebar() {\r\n        this.state.configSidebarVisible = true;\r\n    }\r\n\r\n    isOverlay() {\r\n        return this.config.menuMode === 'overlay';\r\n    }\r\n\r\n    isDesktop() {\r\n        return window.innerWidth > 991;\r\n    }\r\n\r\n    isMobile() {\r\n        return !this.isDesktop();\r\n    }\r\n\r\n    onConfigUpdate() {\r\n        this.configUpdate.next(this.config);\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Category } from 'src/app/interfaces/category-interfaz';\r\nimport { Product } from 'src/app/interfaces/product-interface';\r\nimport { LocalDataService } from '../localData/local-data.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PreviewCategoryService {\r\n\r\n\r\n  category_id?:number\r\n  productsByCategory = new BehaviorSubject<Product[]>([])\r\n\r\n  constructor(\r\n    private localData:LocalDataService\r\n    )\r\n  {\r\n    this.localData.getCategories().subscribe(data=>{\r\n      console.log(data);\r\n      if (data.length) {\r\n        this.setCategory(data![0].id)\r\n      }\r\n\r\n    })\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  setCategory(id:number){\r\n    this.category_id = id\r\n    this.localData.getProducts().subscribe(products=>{\r\n      const data = products.filter(p=> p.category_id === id)\r\n      this.productsByCategory.next(data)\r\n    })\r\n      \r\n  }\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n}\r\n"],"x_google_ignoreList":[]}